stages:
  - build
  - deploy

variables:
  IMAGE_NAME: "$CI_REGISTRY_IMAGE"
  IMAGE_TAG: "main"

# --- Build Stage ---
build_vitepress_image:
  stage: build
  image: docker:24.0.7
  services:
    - docker:24.0.7-dind
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - echo "🔑 Login at GitLab-Registry..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - echo "🏗️ Build VitePress docker image..."
    - docker build -t "$IMAGE_NAME:$IMAGE_TAG" -f packages/docs/Dockerfile packages/docs/
    - echo "⬆️ Push image to the registry..."
    - docker push "$IMAGE_NAME:$IMAGE_TAG"

# --- Deploy Stage ---
deploy_vitepress_to_server:
  stage: deploy
  image: alpine:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      needs: [build_vitepress_image]
  before_script:
    - "which ssh-agent || (apk add --update openssh-client)"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "🚀 Deploy VitePress to the server..."
    - |
      ssh $SERVER_USER@$SERVER_IP "
        set -e 
        
        cd /opt/webapps/vorm-docs/

        echo '🔑 Login at GitLab-Registry on the server...';
        docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

        echo '⬇️ Get new image from registry...';
        docker compose pull;
        
        echo '🔄 Restart container...';
        docker compose down;
        docker compose up -d;
        
        echo '🧹 Clean up...';
        docker image prune -f;
      "
